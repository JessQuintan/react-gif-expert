{"version":3,"sources":["components/AddCategory.js","img/linkedin.svg","img/github.svg","components/Footer.js","helpers/getFetchGift.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","placeholder","Footer","className","href","src","linkedin","alt","github","getFetchGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGift","GitExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAa,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,cAAkB,EAEbC,mBAAS,IAFI,mBAExCC,EAFwC,KAE5BC,EAF4B,KAkB3C,OAEI,sBAAMC,SAZK,SAACC,GAChBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAIP,GAAJ,mBAAkBO,OACrCN,EAAc,MAOd,SAEA,uBACAO,KAAK,OACLC,MAAOT,EACPU,SArBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,QAqBnBG,YAAY,iBC7BL,MAA0B,qCCA1B,MAA0B,mCCI5BC,EAAS,WAClB,OACI,mCACI,sBAAMC,UAAU,SAAhB,UACI,wDACA,mBAAGC,KAAK,4DAA4DJ,OAAO,QAA3E,SAAmF,qBAAKK,IAAKC,EAAUC,IAAI,GAAGJ,UAAU,4BACxH,mBAAGC,KAAK,qCAAqCJ,OAAO,QAApD,SAA4D,qBAAKK,IAAKG,EAAQD,IAAI,GAAGJ,UAAU,kC,+BCTlGM,EAAY,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAElBC,EAFkB,iDAE+BC,UAAWH,GAF1C,iEAILI,MAAMF,GAJD,cAIlBG,EAJkB,gBAMHA,EAAKC,OANF,uBAMjBC,EANiB,EAMjBA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZlB,kBAiBjBM,GAjBiB,4CAAH,sDCCZO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAC/B,OACI,sBAAKT,UAAU,yDAAf,UACI,qBAAKE,IAAKO,EAAKL,IAAKe,IACpB,4BAAKA,QCFJI,EAAS,SAAC,GAAc,IAAbhB,EAAY,EAAZA,SAAY,ECCR,SAACA,GAAY,IAAD,EAEVtB,mBAAS,CAC/B6B,KAAM,GACNU,SAAS,IAJuB,mBAE7BC,EAF6B,KAEtBC,EAFsB,KAkBpC,OAZJC,qBAAU,WACNrB,EAAaC,GACZqB,MAAK,SAAAC,GACFC,YAAW,WACPJ,EAAS,CACLZ,KAAMe,EACNL,SAAS,MAEd,UAET,CAACjB,IAEQkB,EDhBmBM,CAAaxB,GAA/Ba,EAHwB,EAG7BN,KAAYU,EAHiB,EAGjBA,QAGf,OACC,qCACG,mCAA0B,IAAlBJ,EAAO5B,OAAe,KAAOe,EAArC,OACCiB,GAAW,2CAEZ,qBAAKxB,UAAU,YAAf,SAEgBoB,EAAOJ,KAAI,SAAAC,GAAG,OACd,cAAC,EAAD,eAEIA,GADGA,EAAIC,aEkBpBc,EA/BK,WAAM,IAAD,EAEe/C,mBAAS,CAAC,uBAFzB,mBAEdgD,EAFc,KAEFjD,EAFE,KAIrB,OACI,qCACA,oBAAIgB,UAAU,kBAAd,wBACA,8DACA,cAAC,EAAD,CAAahB,cAAiBA,IAC9B,uBAEA,6BAEQiD,EAAWjB,KAAI,SAACT,GAAD,OACX,cAAC,EAAD,CAEAA,SAAYA,GADLA,QAQnB,cAAC,EAAD,Q,MCtBR2B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.8d6d1497.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory =({ setCategories })=>{\r\n\r\nconst [inputValue, setInputValue]=useState('')\r\n\r\nconst handleInputChange = (e)=>{\r\n    setInputValue(e.target.value)\r\n}\r\n\r\nconst handleSumit =(e)=>{\r\n    e.preventDefault()\r\n\r\n    if(inputValue.trim().length > 2){\r\n        setCategories( cats=> [inputValue,...cats] ) \r\n        setInputValue('')\r\n    }\r\n     \r\n\r\n}\r\n    return(\r\n        \r\n        <form onSubmit={handleSumit}>\r\n            \r\n        <input \r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n        placeholder='Buscar...'\r\n        />\r\n        </form>\r\n      \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export default __webpack_public_path__ + \"static/media/linkedin.8f3ee2e4.svg\";","export default __webpack_public_path__ + \"static/media/github.1be3365d.svg\";","import React from 'react'\r\nimport linkedin from '../img/linkedin.svg'\r\nimport github from '../img/github.svg'\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <>\r\n            <div  className='Footer'>\r\n                <p> By Jhessica Gutierrez </p>\r\n                <a href='https://www.linkedin.com/in/jhessica-gutierrez-141304127/' target='blank'><img src={linkedin} alt='' className='Footer-socialNetworks'/></a>\r\n                <a href='https://www.github.com/JessQuintan' target='blank'><img src={github} alt='' className='Footer-socialNetworks'/></a>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","\r\nexport const getFetchGifs = async(category)=> {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI (category) }&limit=12&api_key=RYT9t83JESYTEITp20nKBGfIZ0wXgBCY&&`\r\n\r\n    const resp = await fetch(url)\r\n\r\n    const {data} = await resp.json()\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n            \r\n        }\r\n    })\r\n    \r\n    return gifs\r\n\r\n\r\n    }","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n    return (\r\n        <div className='card-grid__item  animate__animated animate__backInLeft'>\r\n            <img src={url} alt={title} />\r\n            <p >{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGift } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid =({category})=>{\r\n\r\n\r\nconst {data:images,loading} = useFetchGift(category)\r\n// if (!images) return null\r\n\r\n    return (\r\n     <>\r\n        <h3 > { images.length === 0 ? null : category} </h3>  \r\n        {loading && <p>Loading...</p>  }\r\n\r\n        <div className='card-grid'>\r\n                    {\r\n                        images.map(img=>(\r\n                        <GifGridItem \r\n                        key = {img.id}\r\n                        {...img}\r\n                        />\r\n                    ))}    \r\n                \r\n            </div>\r\n\r\n    </>\r\n    )\r\n}"," \r\nimport {useEffect, useState} from 'react'\r\nimport { getFetchGifs } from '../helpers/getFetchGift'\r\n\r\n\r\n export const useFetchGift =(category)=>{\r\n      \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\nuseEffect(()=>{\r\n    getFetchGifs(category)\r\n    .then(imgs=>{  \r\n        setTimeout(()=>{\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            })\r\n        }, 1000)\r\n    })\r\n},[category])\r\n\r\n    return state; \r\n }\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { Footer } from './components/Footer';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nconst GitExpertApp =()=> {\r\n\r\n    const [categories, setCategories] = useState(['Sakura Card Captor'])\r\n      \r\n    return (\r\n        <>\r\n        <h1 className='title-gifExpert'>Gif Expert</h1>\r\n        <p>Encuentra tus Gifs preferidos</p>\r\n        <AddCategory setCategories = {setCategories}/>\r\n        <hr/>\r\n\r\n        <ol>\r\n            {\r\n                categories.map((category)=>(\r\n                    <GifGrid \r\n                    key = {category}\r\n                    category = {category}\r\n                    />\r\n\r\n                ))\r\n             }  \r\n        </ol>\r\n        \r\n        <Footer/>\r\n\r\n        </>\r\n    )\r\n    \r\n}\r\n\r\n\r\nexport default GitExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GitExpertApp from './GitExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n  \n    <GitExpertApp />,\n \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}